{"version":3,"sources":["components/FileDropper.tsx","constants.ts","axiosInstance.ts","components/Scenarios.tsx","components/FileUpload.tsx","components/FileUploader.tsx","hooks/useInterval.ts","components/ProcessHandler.tsx","components/Processes.tsx","components/Converter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FileDropper","onFileUpload","maxFileSize","onChange","files","apply","CONSTANTS","API_BASE_URL","GENERIC_USER_KEY","axios","create","baseURL","headers","useStyles","makeStyles","theme","createStyles","root","margin","spacing","Scenarios","onSelectedScenarioChange","classes","useState","scenarios","setSenarios","selectedScenario","setSelectedScenario","updateScenario","useCallback","scenario","useEffect","axiosInstance","get","then","response","status","scenarioListJson","data","length","className","Grid","container","direction","justifyContent","alignItems","CircularProgress","Typography","FormControl","component","FormLabel","RadioGroup","name","value","id","event","selectedScenarioID","Number","parseInt","target","find","map","FormControlLabel","control","Radio","color","label","doneAvatar","backgroundColor","green","width","height","errorAvatar","red","FileUpload","file","onEnd","onValidUpload","progress","setProgress","isDone","setIsDone","error","setError","onProgress","stopPropagation","Math","round","loaded","total","call","formData","FormData","append","toString","post","onUploadProgress","statusText","model","catch","message","Box","display","mr","LinearProgress","variant","minWidth","Tooltip","title","Avatar","Clear","Check","FileUploader","onFileUploadEnd","uploadedFiles","setUploadedFiles","modelIds","setModelIds","handleUploadEnd","upFiles","handleValidUpload","modelId","oldModelIds","nOldModelIds","slice","push","i","useInterval","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","downloadButton","ProcessHandler","process","setProcess","processResult","setProcessResult","JSON","stringify","Object","fromEntries","Button","onClick","url","modelOutFK","a","document","createElement","href","download","body","appendChild","click","removeChild","size","Accordion","AccordionSummary","expandIcon","ExpandMore","AccordionDetails","log","replace","Processes","Converter","uploadedModelsIds","setUploadedModelsIds","paper","padding","steps","contentContainer","minHeight","backButton","marginRight","instructions","marginTop","marginBottom","App","activeStep","setActiveStep","setFiles","handleFileUpload","handleSelectedScenarioChange","style","Paper","Stepper","alternativeLabel","stepLabel","Step","StepLabel","stepIndex","getStepContent","disabled","previousStep","canProceedToNextStep","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.17da31a3.chunk.js","sourcesContent":["import React from 'react';\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\n\r\ntype FileDropperProps = {\r\n  onFileUpload?: (files: File[]) => void;\r\n}\r\nconst FileDropper: React.FC<FileDropperProps> = ({\r\n  onFileUpload\r\n}) => {\r\n  \r\n  const handleChange = (files: File[]) => {\r\n    onFileUpload?.apply(null, [files]);\r\n  } \r\n  \r\n  return (\r\n    <DropzoneArea\r\n      maxFileSize={1e9}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n}\r\n\r\nexport default FileDropper;\r\n","export const CONSTANTS = {\r\n  \r\n  API_BASE_URL: 'https://magman.synology.me:4430/api',\r\n\r\n  GENERIC_USER_KEY: 1006,\r\n}\r\n","import axios from \"axios\";\r\nimport { CONSTANTS } from \"./constants\";\r\n\r\nexport default axios.create({\r\n  baseURL: CONSTANTS.API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n","import { CircularProgress, createStyles, FormControl, FormControlLabel, FormLabel, Grid, makeStyles, Radio, RadioGroup, Theme, Typography } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport { useCallback } from 'react';\r\nimport { useEffect } from 'react';\r\nimport axiosInstance from '../axiosInstance';\r\nimport { Scenario } from '../models/scenario';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }),\r\n);\r\ntype ScenariosProps = {\r\n  onSelectedScenarioChange: (scenario: Scenario) => void;\r\n}\r\nconst Scenarios: React.FC<ScenariosProps> = ({\r\n  onSelectedScenarioChange,\r\n}) => {\r\n  const classes = useStyles();\r\n  const [scenarios, setSenarios] = useState<Scenario[] | null>(null);\r\n  const [selectedScenario, setSelectedScenario] = useState<Scenario | null>(null);\r\n  \r\n  const updateScenario = useCallback((scenario: Scenario | null) => {\r\n    setSelectedScenario(scenario);\r\n    if (scenario !== null) {\r\n      onSelectedScenarioChange(scenario);\r\n    }\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    axiosInstance.get('/scenarios').then((response) => {\r\n      if (response.status === 200) {\r\n        const scenarioListJson = response.data as Scenario[];\r\n        setSenarios(scenarioListJson);\r\n        if (scenarioListJson.length > 0) {\r\n          updateScenario(scenarioListJson[0]);\r\n        }\r\n      } else {\r\n        setSenarios(null);\r\n      }\r\n    })\r\n  }, [updateScenario]);\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const selectedScenarioID = Number.parseInt((event.target as HTMLInputElement).value);\r\n    updateScenario(scenarios?.find((scenario) => scenario.id === selectedScenarioID) ?? null);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        {scenarios === null ?\r\n          <>\r\n            <CircularProgress />\r\n            <Typography>\r\n              Loading scenarios...\r\n            </Typography>\r\n          </>\r\n          :\r\n          <FormControl component=\"fieldset\">\r\n            <FormLabel component=\"legend\">\r\n              Scenarios\r\n            </FormLabel>\r\n            <RadioGroup \r\n              name=\"scenario\" \r\n              value={selectedScenario?.id ?? -1} \r\n              onChange={handleChange}\r\n            >\r\n              {scenarios !== null && scenarios.map((scenario) => \r\n                <FormControlLabel\r\n                  key={scenario.id}\r\n                  value={scenario.id}\r\n                  control={<Radio color=\"primary\" />}\r\n                  label={scenario.name}\r\n                />\r\n              )}\r\n            </RadioGroup>\r\n          </FormControl>\r\n        }\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scenarios;\r\n","import { Avatar, Box, createStyles, Grid, LinearProgress, makeStyles, Theme, Tooltip, Typography } from '@material-ui/core';\r\nimport { green, red } from '@material-ui/core/colors';\r\nimport { Check as CheckIcon, Clear as ClearIcon } from '@material-ui/icons';\r\nimport React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport axiosInstance from '../axiosInstance';\r\nimport { CONSTANTS } from '../constants';\r\nimport { Model } from '../models/model';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    doneAvatar: {\r\n      backgroundColor: green[500],\r\n      width: theme.spacing(3),\r\n      height: theme.spacing(3),\r\n    },\r\n    errorAvatar: {\r\n      backgroundColor: red[500],\r\n      width: theme.spacing(3),\r\n      height: theme.spacing(3),\r\n    },\r\n}));\r\ntype FileUploadProps = {\r\n  file: File;\r\n  onEnd?: () => void;\r\n  onValidUpload?: (modelId: number) => void;\r\n}\r\nconst FileUpload: React.FC<FileUploadProps> = ({\r\n  file,\r\n  onEnd,\r\n  onValidUpload,\r\n}) => {\r\n  const classes = useStyles();\r\n  const [progress, setProgress] = useState(0);\r\n  const [isDone, setIsDone] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const onProgress = (event: ProgressEvent) => {\r\n    event.stopPropagation();\r\n    setProgress(Math.round(100 * event.loaded / event.total));\r\n    if (event.loaded === event.total) {\r\n      setIsDone(true);\r\n      onEnd?.call(null);\r\n    }\r\n  }\r\n\r\n  const getFeedbackAvatar = (): React.ReactNode => {\r\n    if (error !== null) {\r\n      return <Tooltip title={error}>\r\n        <Avatar className={classes.errorAvatar}>\r\n          <ClearIcon />\r\n        </Avatar>\r\n      </Tooltip>\r\n    }\r\n    if (isDone) {\r\n      return <Avatar className={classes.doneAvatar}>\r\n        <CheckIcon />\r\n      </Avatar>\r\n    }\r\n    return <Typography>\r\n      {progress} %\r\n    </Typography>\r\n  }\r\n\r\n  useEffect(() => {\r\n    const formData = new FormData();\r\n    formData.append('UserFK', CONSTANTS.GENERIC_USER_KEY.toString());\r\n    formData.append('CadModelFile', file);\r\n\r\n    axiosInstance\r\n      .post('/models', formData, {onUploadProgress: onProgress})\r\n      .then((response) => {\r\n        if (response.status !== 201) {\r\n          setError(`${response.status} ${response.statusText}`);\r\n        } else {\r\n          const model = response.data as Model;\r\n          onValidUpload?.call(null, model.id);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setError(error.message);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        justifyContent=\"center\"\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Typography>\r\n          {file.name}\r\n        </Typography>\r\n      </Grid>\r\n      <Box\r\n        display=\"flex\" \r\n        alignItems=\"center\"\r\n      >\r\n        <Box\r\n          width=\"90%\"\r\n          mr={1}\r\n        >\r\n          <LinearProgress variant=\"determinate\" value={progress} />\r\n        </Box>\r\n        <Box minWidth={35}>\r\n          {getFeedbackAvatar()}\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FileUpload;\r\n","import { Typography } from '@material-ui/core';\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport FileUpload from './FileUpload';\r\n\r\ntype FileUploaderProps = {\r\n  files: File[],\r\n  onFileUploadEnd?: (validModelsIds: number[]) => void;\r\n}\r\nconst FileUploader: React.FC<FileUploaderProps> = ({\r\n  files,\r\n  onFileUploadEnd,\r\n}) => {\r\n  const [uploadedFiles, setUploadedFiles] = useState(0);\r\n  const [modelIds, setModelIds] = useState<number[]>([]);\r\n\r\n  const handleUploadEnd = useCallback(() => {\r\n    setUploadedFiles((upFiles) => upFiles + 1);\r\n  }, []);\r\n\r\n  const handleValidUpload = (modelId: number) => {\r\n    setModelIds((oldModelIds) => {\r\n      // Inutile ?\r\n      const nOldModelIds = oldModelIds.slice();\r\n      nOldModelIds.push(modelId);\r\n      return nOldModelIds;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (modelIds.length >= files.length) {\r\n      onFileUploadEnd?.call(null, modelIds);\r\n    }\r\n  }, [uploadedFiles, modelIds]);\r\n\r\n  return (\r\n    <>\r\n      <Typography>\r\n        {uploadedFiles === files.length ? \r\n          `Upload done !` :\r\n          `Uploading files... (${uploadedFiles}/${files.length})`\r\n        }\r\n      </Typography>\r\n      {files.map((file, i) => \r\n        <FileUpload\r\n          key={i}\r\n          file={file}\r\n          onEnd={handleUploadEnd} \r\n          onValidUpload={handleValidUpload}\r\n        /> \r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FileUploader;\r\n","import { useEffect, useRef } from 'react'\r\n\r\nfunction useInterval(callback: () => void, delay: number | null): void {\r\n  const savedCallback = useRef(callback)\r\n\r\n  // Remember the latest callback if it changes.\r\n  useEffect(() => {\r\n    savedCallback.current = callback\r\n  }, [callback])\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    // Don't schedule if no delay is specified.\r\n    if (delay === null) {\r\n      return\r\n    }\r\n\r\n    const id = setInterval(() => savedCallback.current(), delay)\r\n\r\n    return () => clearInterval(id)\r\n  }, [delay])\r\n}\r\n\r\nexport default useInterval;\r\n","import { Accordion, AccordionDetails, AccordionSummary, Button, createStyles, makeStyles, Theme, Typography } from '@material-ui/core';\r\nimport { ExpandMore as ExpandMoreIcon } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport axiosInstance from '../axiosInstance';\r\nimport { CONSTANTS } from '../constants';\r\nimport useInterval from '../hooks/useInterval';\r\nimport { Process } from '../models/process';\r\nimport { Scenario } from '../models/scenario';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    downloadButton: {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }),\r\n);\r\n\r\ntype ProcessHandlerProps = {\r\n  modelId: number;\r\n  scenario: Scenario;\r\n}\r\nconst ProcessHandler: React.FC<ProcessHandlerProps> = ({\r\n  modelId,\r\n  scenario,\r\n}) => {\r\n  const classes = useStyles();\r\n  const [process, setProcess] = useState<Process | null>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [processResult, setProcessResult] = useState<Process | null>(null);\r\n  const [isDone, setIsDone] = useState(false)\r\n\r\n  const handleDownload = () => {\r\n    if (processResult === null) \r\n      return;\r\n\r\n    const url = `${CONSTANTS.API_BASE_URL}/models/download/${processResult.modelOutFK}`;\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = url;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n  }\r\n\r\n  useInterval(() => {\r\n    axiosInstance\r\n      .get(`/processes/${process?.id ?? 0}`)\r\n      .then((response) => {\r\n        setProcessResult(response.data as Process);\r\n        if (processResult?.status == 2) {\r\n          setIsDone(true);\r\n        }\r\n      });\r\n  }, process !== null && !isDone ? 1000 : null);\r\n\r\n  useEffect(() => {\r\n    const formData = new FormData();\r\n    formData.append('modelInFK', modelId.toString());\r\n    formData.append('scenarioFK', scenario.id.toString());\r\n    formData.append('userFK', CONSTANTS.GENERIC_USER_KEY.toString());\r\n\r\n    axiosInstance\r\n      .post('/processes', JSON.stringify(Object.fromEntries(formData)))\r\n      .then((response) => {\r\n        if (response.status !== 201) {\r\n          setError(`${response.status} ${response.statusText}`);\r\n        } else {\r\n          setProcess(response.data as Process);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setError(error.message);\r\n      })\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Typography>\r\n        Processing model #{modelId} with scenario {scenario.name}\r\n      </Typography>\r\n      {isDone ?\r\n          <Button \r\n            className={classes.downloadButton}\r\n            onClick={handleDownload}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n          >\r\n            Download\r\n          </Button>\r\n          : null\r\n        }\r\n      <Accordion className=\"log-accordion\">\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          id={modelId.toString()}\r\n        >\r\n          See Log\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <pre>\r\n            <code>\r\n              {processResult?.log.replace(/\\r/g, '\\n') ?? \"...\"}\r\n            </code>\r\n          </pre>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProcessHandler;\r\n","import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Scenario } from '../models/scenario';\r\nimport ProcessHandler from './ProcessHandler';\r\n\r\ntype ProcessesProps = {\r\n  scenario: Scenario;\r\n  modelIds: number[];\r\n}\r\nconst Processes: React.FC<ProcessesProps> = ({\r\n  scenario,\r\n  modelIds,\r\n}) => {\r\n\r\n  return (\r\n    <>\r\n      <Typography>\r\n        Processes : \r\n      </Typography>\r\n      {(modelIds.map((modelId, i) =>\r\n        <ProcessHandler\r\n          key={i}\r\n          modelId={modelId}\r\n          scenario={scenario}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Processes;\r\n","import React, { useState } from 'react';\r\nimport { Scenario } from '../models/scenario';\r\nimport FileUploader from './FileUploader';\r\nimport Processes from './Processes';\r\n\r\ntype ConverterProps = {\r\n  files: File[];\r\n  scenario: Scenario;\r\n}\r\nconst Converter: React.FC<ConverterProps> = ({\r\n  files,\r\n  scenario,\r\n}) => {\r\n  const [uploadedModelsIds, setUploadedModelsIds] = useState<number[] | null>(null);\r\n\r\n  const handleFileUploadEnd = (modelIds: number[]) => {\r\n    setUploadedModelsIds(modelIds);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <FileUploader files={files} onFileUploadEnd={handleFileUploadEnd} />\r\n      {uploadedModelsIds !== null && uploadedModelsIds.length === files.length ? // Tous les fichiers uploadés doivent passer\r\n        <Processes\r\n          scenario={scenario}\r\n          modelIds={uploadedModelsIds}\r\n        /> :\r\n        null\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Converter;\r\n","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport { Button, createStyles, Grid, Paper, makeStyles, Step, StepLabel, Stepper, Theme, Typography, CircularProgress } from '@material-ui/core';\r\nimport FileDropper from './components/FileDropper';\r\nimport Scenarios from './components/Scenarios';\r\nimport { Scenario } from './models/scenario';\r\nimport Converter from './components/Converter';\r\n\r\nconst getSteps = (): string[] => {\r\n  return ['Select CAD file(s)', 'Choose scenario', 'Get your files'];\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      width: '50%',\r\n      minWidth: '50rem',\r\n      padding: theme.spacing(2),\r\n    },\r\n    steps: {\r\n      width: '90%',\r\n    },\r\n    contentContainer: {\r\n      minHeight: '20rem',\r\n      minWidth: '50rem',\r\n    },\r\n    backButton: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n  }),\r\n);\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [files, setFiles] = useState<File[] | null>(null);\r\n  const [selectedScenario, setSelectedScenario] = useState<Scenario | null>(null);\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((previousStep) => previousStep + 1);\r\n  }\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((previousStep) => previousStep - 1);\r\n  }\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  }\r\n\r\n  const handleFileUpload = (uploadedFiles: File[]) => {\r\n    setFiles(uploadedFiles);\r\n  }\r\n\r\n  const handleSelectedScenarioChange = (scenario: Scenario) => {\r\n    setSelectedScenario(scenario);\r\n  }\r\n\r\n  const canProceedToNextStep = (): boolean => {\r\n    switch (activeStep) {\r\n      case 0:\r\n        return (files !== null && files.length > 0);\r\n      case 1:\r\n        return selectedScenario !== null;\r\n      default:\r\n        return true;\r\n    }\r\n  }\r\n\r\n  const getStepContent = (stepIndex: number): React.ReactNode => {\r\n    switch (stepIndex) {\r\n      case 0:\r\n        return <div>\r\n            <FileDropper onFileUpload={handleFileUpload} />\r\n            <ul>\r\n              {files !== null && files.map((file, i) => \r\n                <li key={i}>{file.name}</li>  \r\n              )}\r\n            </ul>\r\n          </div>\r\n      case 1:\r\n        return <Scenarios onSelectedScenarioChange={handleSelectedScenarioChange} />\r\n      case 2:\r\n        if (files !== null && selectedScenario !== null) {\r\n          return <Converter files={files} scenario={selectedScenario} />\r\n        }\r\n        return <CircularProgress />\r\n      default:\r\n        return <div>Unknown stepIndex</div>;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={0}\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      style={{ minHeight: '100vh' }}\r\n    >\r\n      <Paper className={classes.paper}>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n        >\r\n          <Typography variant=\"h4\">\r\n            ASCAD\r\n          </Typography>\r\n          <Typography variant=\"h6\">\r\n            Simplify and Convert\r\n          </Typography>\r\n          <Stepper\r\n            className={classes.steps}\r\n            activeStep={activeStep}\r\n            alternativeLabel\r\n          >\r\n            {steps.map((stepLabel) =>\r\n              <Step key={stepLabel}>\r\n                <StepLabel>\r\n                  {stepLabel}  \r\n                </StepLabel>\r\n              </Step>\r\n            )}\r\n          </Stepper>\r\n          <div className={classes.contentContainer}>\r\n            {getStepContent(activeStep)}\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"flex-end\"\r\n          alignItems=\"center\"\r\n        >\r\n          {activeStep === steps.length ? (\r\n            <Button \r\n              onClick={handleReset}\r\n              size=\"large\"\r\n            >\r\n              Restart\r\n            </Button>\r\n          ) : (\r\n              <div>\r\n                <Button\r\n                  disabled={activeStep === 0}\r\n                  size=\"large\"\r\n                  onClick={handleBack}\r\n                  className={classes.backButton}\r\n                >\r\n                  Back\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  size=\"large\"\r\n                  onClick={handleNext}\r\n                  disabled={!canProceedToNextStep()}\r\n                >\r\n                  {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                </Button>\r\n              </div>\r\n          )}\r\n        </Grid>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}